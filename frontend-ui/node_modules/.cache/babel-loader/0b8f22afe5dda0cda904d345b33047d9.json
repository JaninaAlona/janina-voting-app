{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  id: \"subbtn\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_WhoIs = _resolveComponent(\"WhoIs\");\n\n  const _component_LangSelect = _resolveComponent(\"LangSelect\");\n\n  const _component_ErrorModal = _resolveComponent(\"ErrorModal\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", {\n    onOnload: _cache[0] || (_cache[0] = (...args) => $options.getCSRF && $options.getCSRF(...args))\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), $data.showIndex ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.title), 1\n  /* TEXT */\n  ), _createVNode(_component_WhoIs, {\n    onNameChanged: $options.nameChanged\n  }, null, 8\n  /* PROPS */\n  , [\"onNameChanged\"]), _createVNode(_component_LangSelect, {\n    onProgrLangChanged: $options.progrLangChanged\n  }, null, 8\n  /* PROPS */\n  , [\"onProgrLangChanged\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendVote && $options.sendVote(...args)),\n    id: \"vote\"\n  }, \"Vote\")])])) : _createCommentVNode(\"v-if\", true), $data.showResults ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, \"User \" + _toDisplayString(_ctx.username) + \" voted \" + _toDisplayString(_ctx.progrLang), 1\n  /* TEXT */\n  ), _createElementVNode(\"h2\", null, \"There were \" + _toDisplayString($data.votes) + \" on \" + _toDisplayString(_ctx.progrLang) + \" of all \" + _toDisplayString($data.totalVotes) + \" votes\", 1\n  /* TEXT */\n  )])) : _createCommentVNode(\"v-if\", true), $data.showError ? (_openBlock(), _createBlock(_component_ErrorModal, {\n    key: 2,\n    errorMsg: $data.message\n  }, null, 8\n  /* PROPS */\n  , [\"errorMsg\"])) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;AAOSA,IAAE,EAAC;;;;;;;;;;;;6DANVC,oBAA6B,KAA7B,EAA6B;AAAvBC,YAAM,yCAAEC,6CAAF;AAAiB,GAA7B;;AAAA,KACWC,iCAAXC,oBAQM,KARN,EAQMC,UARN,EAQM,CAPJL,oBAAoB,IAApB,EAAoB,IAApB,EAAoBM,iBAAbH,WAAa,CAApB,EAAY;AAAA;AAAZ,GAOI,EANJI,aAAoCC,gBAApC,EAAoC;AAA5BC,iBAAW,EAAEP;AAAe,GAApC,EAAgC,IAAhC,EAAgC;AAAA;AAAhC,IAAgC,iBAAhC,CAMI,EALJK,aAAmDG,qBAAnD,EAAmD;AAAtCC,sBAAgB,EAAET;AAAoB,GAAnD,EAA+C,IAA/C,EAA+C;AAAA;AAA/C,IAA+C,sBAA/C,CAKI,EAHJF,oBAEM,KAFN,cAEM,CADFA,oBAAkD,QAAlD,EAAkD;AAAzCY,WAAK,yCAAGV,+CAAH,CAAoC;AAAvBH,MAAE,EAAC;AAAoB,GAAlD,EAAqC,MAArC,CACE,CAFN,CAGI,CARN,wCASWI,mCAAXC,oBAGM,KAHN,EAGMS,UAHN,EAGM,CAFJb,oBAAkD,IAAlD,EAAkD,IAAlD,EAAI,UAAKM,iBAAGQ,aAAH,CAAL,GAAmB,SAAnB,GAA0BR,iBAAGQ,cAAH,CAA9B,EAA0C;AAAA;AAA1C,GAEI,EADJd,oBAAgF,IAAhF,EAAgF,IAAhF,EAAI,gBAAWM,iBAAGH,WAAH,CAAX,GAAsB,MAAtB,GAA0BG,iBAAGQ,cAAH,CAA1B,GAAyC,UAAzC,GAAiDR,iBAAGH,gBAAH,CAAjD,GAAiE,QAArE,EAA2E;AAAA;AAA3E,GACI,CAHN,wCAIsCA,iCAAtCY,aAAmDC,qBAAnD,EAAmD;UAAA;AAAtCC,YAAQ,EAAEd;AAA4B,GAAnD;;AAAA","names":["id","_createElementVNode","onOnload","$options","$data","_createElementBlock","_hoisted_1","_toDisplayString","_createVNode","_component_WhoIs","onNameChanged","_component_LangSelect","onProgrLangChanged","onClick","_hoisted_3","_ctx","_createBlock","_component_ErrorModal","errorMsg"],"sourceRoot":"","sources":["/app/src/App.vue"],"sourcesContent":["<template>\n  <div @onload=\"getCSRF\"></div>\n  <div v-if=\"showIndex\">\n    <h1>{{ title }}</h1>\n    <WhoIs @nameChanged=\"nameChanged\" />\n    <LangSelect @progrLangChanged=\"progrLangChanged\" />\n\n    <div id=\"subbtn\">\n        <button @click =\"sendVote\" id=\"vote\">Vote</button>\n    </div>\n  </div>\n  <div v-if=\"showResults\">\n    <h1>User {{ username }} voted {{ progrLang }}</h1>\n    <h2>There were {{ votes }} on {{ progrLang }} of all {{ totalVotes }} votes</h2>\n  </div>\n  <ErrorModal :errorMsg=\"message\" v-if=\"showError\" />\n</template>\n\n\n<script>\nimport WhoIs from './components/WhoIs.vue'\nimport LangSelect from './components/LangSelect.vue'\nimport ErrorModal from './components/ErrorModal.vue'\nimport axios from 'axios'\n\naxios.defaults.xsrfHeaderName = 'X-csrftoken';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nexport default {\n  name: 'App',\n  components: { WhoIs, LangSelect, ErrorModal },\n  mounted() {\n    document.onreadystatechange = () => {\n      if(document.readyState == \"complete\") {\n        this.getCSRF();\n      }\n    }\n  },\n  data() {\n    return {\n      title: \"What is your favourite programming language?\",\n      \n      dataForAPI: {\n        username: '',\n        progrLang: '',\n      },\n      \n      votes: 0,\n      totalVotes: 0,\n\n      showIndex: true,\n      showResults: false,\n      showError: false,\n\n      enableDefaultSel: true,\n\n      message: '',\n    }\n  },\n  methods: {\n    getCSRF() {\n      axios.get('http://localhost:8000/api/get-csrf')\n    },\n\n    nameChanged(name) {\n      this.dataForAPI.username = name;\n    },\n\n    progrLangChanged(lang) {\n      this.enableDefaultSel = false;\n      this.dataForAPI.progrLang = lang;\n    },\n\n    toggleResultsVisible() {\n      this.showIndex = false;\n      this.showResults = true;\n      this.showError = false;\n    },\n\n    toggleErrorVisible() {\n      this.showIndex = false;\n      this.showResults = false;\n      this.showError = true;\n    },\n\n    sendVote() {\n\n      if (this.enableDefaultSel) {\n        this.dataForAPI.progrLang = \"C\";\n      }\n\n      axios.post('http://localhost:8000/api/', this.dataForAPI)\n        .then(response => {\n          if (!response.data.error) {\n            this.username = response.data.username;\n            this.progrLang = response.data.progrLang;\n            this.votes = response.data.votes;\n            this.totalVotes = response.data.totalVotes;\n            this.toggleResultsVisible();\n          } else {\n            this.toggleErrorVisible();\n            this.message = response.data.error;\n          }\n        })\n        .catch(error => console.log(error));\n    }\n  } \n}\n\n\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n#subbtn {\n    margin-top: 100px;\n}\n\n#vote {\n    background:#faa23e;\n    width: 80px;\n    height: 60px;\n    border-radius: 15px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}