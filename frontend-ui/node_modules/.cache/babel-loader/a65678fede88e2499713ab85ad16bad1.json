{"ast":null,"code":"import axios from 'axios';\nimport WhoIs from './components/WhoIs.vue';\nimport LangSelect from './components/LangSelect.vue';\nexport default {\n  name: 'App',\n  components: {\n    WhoIs,\n    LangSelect\n  },\n\n  data() {\n    return {\n      title: \"What is your favourite programming language?\",\n      dataForAPI: {\n        username: '',\n        progrLang: ''\n      },\n      votes: 0,\n      totalVotes: 0,\n      showIndex: true,\n      showResults: false\n    };\n  },\n\n  methods: {\n    nameChanged(name) {\n      this.dataForAPI.username = name;\n    },\n\n    progrLangChanged(lang) {\n      this.dataForAPI.progrLang = lang;\n    },\n\n    toggleResultsVisible() {\n      this.showIndex = false;\n      this.showResults = true;\n    },\n\n    sendVote() {\n      const httpClient = axios.create({\n        xsrfHeaderName: 'X-CSRF-Token',\n        xsrfCookieName: 'csrftoken',\n        withCredentials: true\n      });\n      httpClient.get('http://0.0.0.0:8000/api/get-csrf'); //const csrftoken = getCookie('csrftoken');\n      //add hashed token to post request?\n\n      httpClient.post('http://0.0.0.0:8000/api/', this.dataForAPI) //axios.post('https://jsonplaceholder.typicode.com/posts', this.dataForAPI)\n      .then(response => console.log(response)).catch(error => console.log(error)); // // Creating a XHR object\n      // let xhr = new XMLHttpRequest();\n      // //Django server path\n      // let url = \"http://127.0.0.1:8000/api\";\n      // // open a connection\n      // xhr.open(\"POST\", url, true);\n      // // Set the request header i.e. which type of content you are sending\n      // xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n      // // Create a state change callback\n      // xhr.onreadystatechange = function () {\n      //     if (xhr.readyState === 4 && xhr.status === 200) {\n      //       const json_response = xhr.responseText;\n      //       const responseObj = JSON.parse(json_response);\n      //       this.username = responseObj.username;\n      //       this.progrLang = responseObj.progrLang;\n      //       this.votes = responseObj.votes;\n      //       this.totalVotes = responseObj.totalVotes;\n      //       this.toggleResultsVisible();\n      //     }\n      // };\n      // // Converting JSON data to string\n      // var data = JSON.stringify({ \"username\": this.username, \"progrLang\": this.progrLang });\n      // // Sending data with the request\n      // xhr.send(data);\n    }\n\n  }\n};\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}","map":{"version":3,"mappings":"AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAGA,eAAe;AACbC,MAAI,EAAE,KADO;AAEbC,YAAU,EAAE;AAAEH,SAAF;AAASC;AAAT,GAFC;;AAGbG,MAAI,GAAG;AACL,WAAO;AACLC,WAAK,EAAE,8CADF;AAGLC,gBAAU,EAAE;AACVC,gBAAQ,EAAE,EADA;AAEVC,iBAAS,EAAE;AAFD,OAHP;AAQLC,WAAK,EAAE,CARF;AASLC,gBAAU,EAAE,CATP;AAWLC,eAAS,EAAE,IAXN;AAYLC,iBAAW,EAAE;AAZR,KAAP;AAcD,GAlBY;;AAmBbC,SAAO,EAAE;AACPC,eAAW,CAACZ,IAAD,EAAO;AAChB,WAAKI,UAAL,CAAgBC,QAAhB,GAA2BL,IAA3B;AACD,KAHM;;AAKPa,oBAAgB,CAACC,IAAD,EAAO;AACrB,WAAKV,UAAL,CAAgBE,SAAhB,GAA4BQ,IAA5B;AACD,KAPM;;AASPC,wBAAoB,GAAG;AACrB,WAAKN,SAAL,GAAiB,KAAjB;AACA,WAAKC,WAAL,GAAmB,IAAnB;AACD,KAZM;;AAcPM,YAAQ,GAAG;AACT,YAAMC,UAAS,GAAIpB,KAAK,CAACqB,MAAN,CAAa;AAC9BC,sBAAc,EAAE,cADc;AAE9BC,sBAAc,EAAE,WAFc;AAG9BC,uBAAe,EAAE;AAHa,OAAb,CAAnB;AAOAJ,gBAAU,CAACK,GAAX,CAAe,kCAAf,EARS,CAUT;AAEA;;AACAL,gBAAU,CAACM,IAAX,CAAgB,0BAAhB,EAA4C,KAAKnB,UAAjD,EACA;AADA,OAEGoB,IAFH,CAEQC,QAAO,IAAKC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAFpB,EAGGG,KAHH,CAGSC,KAAI,IAAKH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAHlB,EAbS,CAkBT;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACF;;AA9DO;AAnBI,CAAf;;AAqFA,SAASC,SAAT,CAAmB9B,IAAnB,EAAyB;AACrB,MAAI+B,WAAU,GAAI,IAAlB;;AACA,MAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC3C,UAAMC,OAAM,GAAIF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAhB;;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAMH,MAAK,GAAIC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAf,CADqC,CAErC;;AACA,UAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBvC,IAAI,CAACqC,MAAL,GAAc,CAAlC,MAA0CrC,IAAG,GAAI,GAArD,EAA2D;AACvD+B,mBAAU,GAAIS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBvC,IAAI,CAACqC,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACJ;AACJ;AACJ;;AACA,SAAON,WAAP;AACJ","names":["axios","WhoIs","LangSelect","name","components","data","title","dataForAPI","username","progrLang","votes","totalVotes","showIndex","showResults","methods","nameChanged","progrLangChanged","lang","toggleResultsVisible","sendVote","httpClient","create","xsrfHeaderName","xsrfCookieName","withCredentials","get","post","then","response","console","log","catch","error","getCookie","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent"],"sourceRoot":"","sources":["/app/src/App.vue"],"sourcesContent":["<template>\n  <div v-if=\"showIndex\">\n    <h1>{{ title }}</h1>\n    <WhoIs @nameChanged=\"nameChanged\" />\n    <LangSelect @progrLangChanged=\"progrLangChanged\" />\n\n    <div id=\"subbtn\">\n        <button @click =\"sendVote\" id=\"vote\">Vote</button>\n    </div>\n  </div>\n  <div v-if=\"showResults\">\n    <h1>User {{ username }} voted {{ progrLang }}</h1>\n    <h2>There were {{ votes }} on {{ progrLang }} of all {{ totalVotes }} votes</h2>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios'\nimport WhoIs from './components/WhoIs.vue'\nimport LangSelect from './components/LangSelect.vue'\n\n\nexport default {\n  name: 'App',\n  components: { WhoIs, LangSelect },\n  data() {\n    return {\n      title: \"What is your favourite programming language?\",\n      \n      dataForAPI: {\n        username: '',\n        progrLang: '',\n      },\n      \n      votes: 0,\n      totalVotes: 0,\n\n      showIndex: true,\n      showResults: false,\n    }\n  },\n  methods: {\n    nameChanged(name) {\n      this.dataForAPI.username = name;\n    },\n\n    progrLangChanged(lang) {\n      this.dataForAPI.progrLang = lang;\n    },\n\n    toggleResultsVisible() {\n      this.showIndex = false;\n      this.showResults = true;\n    },\n\n    sendVote() {\n      const httpClient = axios.create({ \n        xsrfHeaderName: 'X-CSRF-Token',\n        xsrfCookieName: 'csrftoken',\n        withCredentials: true\n      });\n\n\n      httpClient.get('http://0.0.0.0:8000/api/get-csrf');\n\n      //const csrftoken = getCookie('csrftoken');\n\n      //add hashed token to post request?\n      httpClient.post('http://0.0.0.0:8000/api/', this.dataForAPI)\n      //axios.post('https://jsonplaceholder.typicode.com/posts', this.dataForAPI)\n        .then(response => console.log(response))\n        .catch(error => console.log(error));\n\n      // // Creating a XHR object\n      // let xhr = new XMLHttpRequest();\n\n      // //Django server path\n      // let url = \"http://127.0.0.1:8000/api\";\n  \n      // // open a connection\n      // xhr.open(\"POST\", url, true);\n\n      // // Set the request header i.e. which type of content you are sending\n      // xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      // // Create a state change callback\n      // xhr.onreadystatechange = function () {\n      //     if (xhr.readyState === 4 && xhr.status === 200) {\n      //       const json_response = xhr.responseText;\n      //       const responseObj = JSON.parse(json_response);\n      //       this.username = responseObj.username;\n      //       this.progrLang = responseObj.progrLang;\n      //       this.votes = responseObj.votes;\n      //       this.totalVotes = responseObj.totalVotes;\n      //       this.toggleResultsVisible();\n      //     }\n      // };\n\n      // // Converting JSON data to string\n      // var data = JSON.stringify({ \"username\": this.username, \"progrLang\": this.progrLang });\n\n      // // Sending data with the request\n      // xhr.send(data);\n    }\n  } \n}\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n#subbtn {\n    margin-top: 100px;\n}\n\n#vote {\n    background:#faa23e;\n    width: 80px;\n    height: 60px;\n    border-radius: 15px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}