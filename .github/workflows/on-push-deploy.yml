name: 'Run Deploy Actions on push to main trigger'

#on:
  # push:
  #   branches:
  #     - 'main'
#manually trigger a workflow for testing
on: 
  workflow_dispatch

jobs:
  run-deploy-on-push-to-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker Context for Buildx
        id: buildx-context
        run: docker context create builders
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          endpoint: builders

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JANINA_DOCKER_HUB_USER }}
          password: ${{ secrets.JANINA_DOCKER_HUB_ACCESS_KEY }}

      - name: Build Docker backend image
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./vote_app_backend/
          tags: alonimacaroni/vote-backend:prod
          target: prod-stage

      - name: Build Docker frontend image
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./frontend-ui/
          tags: alonimacaroni/vote-frontend:prod
          target: prod-stage

      - name: Set up S3cmd CLI Tool
        uses: s3-actions/s3cmd@v1.2.0
        with:
          provider: digitalocean
          region: 'fra1'
          access_key: ${{ secrets.SPACES_ACCESS_KEY }}
          secret_key: ${{ secrets.SPACES_SECRET_KEY }}

      - name: Get .env from web spaces
        run: |
          s3cmd -c ~/.s3cfg get s3://janina-test-space/env-stage .env --force
          s3cmd -c ~/.s3cfg get s3://janina-test-space/env-backend-stage vote_app_backend/.env --force
          s3cmd -c ~/.s3cfg get s3://janina-test-space/env-frontend-stage frontend-ui/.env --force

      - name: Setup Docker Context
        uses: arwynfr/actions-docker-context@v2
        with:
          docker_host: 'ssh://$SERVER_USER@SERVER_IP'
          context_name: 'production'
          ssh_cert: ${{ secrets.SSH_CERT }}
          ssh_key: ${{ secrets.SSH_KEY }}

      - name: Deploy App
        run: |
#          docker --context production stack deploy -c <(echo -e "version: '3.9'\n"; docker compose -f docker-compose.prod.yml config) --compose-file docker-compose.prod.yml janina-voting-app
          docker compose -f docker-compose.prod.yml config | docker --context production stack deploy -c docker-compose.prod.yml janina-voting-app