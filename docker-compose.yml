version: "3"

services:
  frontend-part:
    image: alonimacaroni/vote-frontend:latest
    labels: 
      - traefik.enable=true
      - traefik.http.routers.frontend-part.entrypoints=websecure,web
      - traefik.http.routers.frontend-part.rule=Host(`janina.devcon.team`)
      - traefik.http.routers.frontend-part.tls=true
      - treafik.http.routers.frontend-part.tls.certresolver=production
    restart: unless-stopped
    volumes:
      - ./frontend-ui:/app
    ports:
      - "8080:8080"
    command: >
      sh -c 'npm run serve'
    environment:
      - VUE_APP_URI_ENTRYP_PATH=${URI_ENTRYP_PATH}
      - VUE_APP_URI_CSRF_PATH=${URI_CSRF_PATH}
      - VUE_APP_DOMAIN_URL=${DOMAIN_URL}
    networks:
      - frontend
      - proxy
  vote-app-mysql:
    image: mysql:8.0
    restart: unless-stopped
    volumes:
      - mysql:/var/lib/mysql:delegated
      - ./db_assets:/docker-entrypoint-initdb.d/:delegated
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks: 
      - backend
  backend-part:
    image: alonimacaroni/vote-backend:latest
    labels: 
      - traefik.enable=true
      - traefik.http.routers.backend-part.entrypoints=websecure,web
      - traefik.http.routers.backend-part.rule=Host(`janina.devcon.team/api/*`)
      - traefik.http.routers.backend-part.tls=true
      - treafik.http.routers.backend-part.tls.certresolver=production
    restart: unless-stopped
    volumes:
      - ./vote_app_backend:/code
    ports:
      - "8000:8000"
    command: >
      sh -c 'python manage.py runserver 0:8000'
    environment:
      - DATABASE_NAME=${MYSQL_DATABASE}
      - DATABASE_USER=${MYSQL_USER}
      - DATABASE_PASS=${MYSQL_PASSWORD}
      - URI_ENTRYP_PATH=${URI_ENTRYP_PATH}
      - URI_CSRF_PATH=${URI_CSRF_PATH}
      - DOMAIN_URL=${DOMAIN_URL}
    networks:
      - backend
      - frontend
      - proxy
    depends_on:
      - vote-app-mysql
  proxy-part:
    image: traefik:v2.7
    restart: unless-stopped
    command: --providers.docker
    ports:
      - 80:80 
      - 443:443
    networks: 
      - proxy
    volumes: 
      - /etc/traefik:/etc/traefik
      - traefik-ssl-certs:/ssl-certs
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
  proxy:
    driver: bridge

volumes:
  mysql:
    driver: local
  traefik-ssl-certs:
    driver: local